
"""
Methods for accessing the .pbi index in a memory-efficient manner
"""

import logging

import numpy as np

from pbcore.io.align.PacBioBamIndex import PacBioBamIndex, StreamingBamIndex


log = logging.getLogger(__name__)

# bypass the pbcore.io.dataset file opening to conserve memory


def get_pb_index(to_index, subreads, allow_multiple_bam=True):
    if len(subreads.externalResources) > 1:
        if allow_multiple_bam:
            log.warn(
                "Multiple BAM resources found - this routine is not intended for use on merged datasets")
            return subreads.index
        else:
            raise ValueError("Invalid input - contains multiple BAM files.")
    elif subreads.externalResources[0].pbi is None:
        raise ValueError("Invalid input - .pbi index required")
    else:
        return PacBioBamIndex(subreads.externalResources[0].pbi)


def stream_pbi(pb_index):
    flag = np.concatenate(([True], pb_index.holeNumber[1:] != pb_index.holeNumber[:-1]))
    zmw_idx = np.flatnonzero(flag)
    yield pb_index, zmw_idx


class MultiIndexStreamer(object):
    """
    Wrapper for streaming the .pbi index for all use cases, including an
    already loaded index and multiple BAM files.  Mimics StreamingBamIndex
    in pbcore.io.align.
    """

    def __init__(self, ds):
        self._ds = ds

    def iter_with_zmw_index(self):
        # Case 1: index is already loaded into memory, so stream it as-is
        if self._ds._index is not None:
            for pb_index, zmw_index in stream_pbi(self._ds.index):
                yield pb_index, zmw_index
        # Case 2: index not loaded, iterate over individual .pbi files and
        # stream these
        else:
            for ext_res in self._ds.externalResources:
                if ext_res.pbi is None:
                    raise IOError("No .pbi index found for {f}".format(f=ext_res.bam))
                streamer = StreamingBamIndex(ext_res.pbi)
                for pb_index, zmw_index in streamer.iter_with_zmw_index():
                    yield pb_index, zmw_index


def get_pb_index_streamed(subreads):
    return MultiIndexStreamer(subreads)
