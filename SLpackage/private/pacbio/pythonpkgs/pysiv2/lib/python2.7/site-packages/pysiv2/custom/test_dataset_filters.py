
from pbcore.io import SubreadSet
from pbcommand.models import FileTypes
from pbcommand.testkit import pb_requirements

from pysiv2.custom.base import TestBase


class TestDatasetFilters(TestBase):
    """
    Check that dataset filtering is behaving corretly.
    """

    def _get_filtered_subreadset(self):
        for file_id, f in self.datastore.get_file_dict().iteritems():
            if (f.file_type_id == FileTypes.DS_SUBREADS.file_type_id and
                "filterdataset" in f.file_id):
                return f.path
        raise IOError("Can't find SubreadSet from filterdataset task")

    @pb_requirements("SL-1277")
    def test_output_subreadset_name(self):
        """
        Verify that the output SubreadSet name is identical to the input name
        plus ' (barcoded)'.
        """
        with SubreadSet(self.entrypoints.data['eid_subread']) as ds_in:
            with SubreadSet(self._get_filtered_subreadset()) as ds_out:
                self.assertTrue(ds_out.name.startswith(ds_in.name))
                self.assertTrue("(filtered)" in ds_out.name)
                self.assertTrue("filtered" in ds_out.tags.split(","))
