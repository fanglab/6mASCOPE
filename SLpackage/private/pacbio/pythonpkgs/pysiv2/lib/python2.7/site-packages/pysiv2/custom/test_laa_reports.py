
"""
Test JSON reports produced by the LAA pipeline(s).
"""

from pysiv2.custom.base import TestReportStatistics


class TestAmpliconAnalysisInputs(TestReportStatistics):
    """
    Validate contents of the ``amplicon_analysis_input`` report.
    """
    REPORT_ID = "amplicon_analysis_input"
    TEST_ID = "amplicon_analysis_input"
    METRIC_IDS = []

    def test_all_barcodes_have_good_reads(self):
        """
        Test that all barcodes reported in the table of results have at least
        one good read.
        """
        t = self.report.tables[0]
        self.assertEqual(t.id, "result_table")
        for col in t.columns:
            if col.id == "good":
                self.assertTrue(all([x>0 for x in col.values]))
                break
        else:
            self.fail("Can't find column 'good' in table")

    def test_amplicon_inputs_total_percent(self):
        """
        Test that the sum of percentages of good, chimeric, and noise reads
        is equal to 100%.
        """
        t = self.report.tables[0]
        for k in range(len(t.columns[0].values)):
            total = 0
            for col in t.columns:
                if col.id.endswith("_pct"):
                    total += col.values[k]
            self.assertAlmostEqual(total, 1.0, places=3)
