
"""
Test output of structural variants pipeline
"""

from pbcommand.models import FileTypes

from pysiv2.custom.base import TestStatisticsBase, TestReportStatistics, TestBase


class TestStructuralVariantsBed(TestStatisticsBase):
    TEST_ID = "sv_bed"
    METRIC_IDS = [
        "n_deletions",
        "n_insertions"
    ]

    @classmethod
    def getMetrics(cls):
        cls._bed_file = cls._vcf_file = None
        for file_id, file_info in cls.datastore.get_file_dict().iteritems():
            if file_info.file_type_id == FileTypes.BED.file_type_id:
                cls._bed_file = file_info.path
            elif file_info.file_type_id == FileTypes.VCF.file_type_id:
                cls._vcf_file = file_info.path
        cls.metric_dict = {"n_deletions":0, "n_insertions":0}
        with open(cls._bed_file) as bed_in:
            for line in bed_in.readlines():
                fields = line.split("\t")
                vtype = fields[3]
                if vtype == "Deletion":
                    cls.metric_dict["n_deletions"] += 1
                elif vtype == "Insertion":
                    cls.metric_dict["n_insertions"] += 1


class TestStructuralVariantsReport(TestReportStatistics):

    REPORT_ID = "structural_variants"
    TEST_ID = "sv_report"
    METRIC_IDS = []

    def test_annotation_names(self):
        """
        Test that the identifiers in the table column ``annotation`` are the
        expected strings.
        """
        self._compare_table_column("anno_table", "annotation", "eq")

    def test_sample_names(self):
        """
        Test that the identifiers in the table column ``sample`` are the
        expected strings.
        """
        self._compare_table_column("sample_table", "sample", "eq")

    def test_homozygous_variants(self):
        """
        Test that the values in the table column ``homozygous`` are
        greater than or equal to the expected value.
        """
        self._compare_table_column("sample_table", "homozygous", "ge")


    def test_heterozygous_variants(self):
        """
        Test that the values in the table column ``heterozygous`` are
        greater than or equal to the expected value.
        """
        self._compare_table_column("sample_table", "heterozygous", "ge")
