
from pbcore.io import AlignmentSet

from pysiv2.custom.base import TestValuesLoader, setUpFindAlignments
from pysiv2.utils import find_discordant_mappings

MAX_SUBREAD_DISTANCE = 25000


class TestConcordantMappings(TestValuesLoader):

    """
    Tests that mappings reported by blasr/compareSequences/pbalign are
    concordant, meaning that every subread of a read maps to nearby genomic
    locations.
    """

    def setUp(self):
        super(TestConcordantMappings, self).setUp()
        setUpFindAlignments(self)

    def test_concordant_aligned_subreads(self):
        """
        Check for discordant mappings, defined as mapped subreads that are
        separated by more than N base pairs of reference sequence.  By default
        N is 25000, but for datasets with very long reads this may need to be
        increased.  Conversely, it should probably be decreased for short
        inserts.
        """
        # FIXME This is a hack to allow us to set different tolerances
        # depending on subread length - but the tolerance should be determined
        # automatically instead
        max_dist = self.test_values.get("concordant_mappings", {}).get(
            "max_subread_distance", 25000)
        errors = list(find_discordant_mappings(self.alignment_file_name,
            max_subread_distance=max_dist))
        self.assertEqual(len(errors), 0, "\n".join(errors))
