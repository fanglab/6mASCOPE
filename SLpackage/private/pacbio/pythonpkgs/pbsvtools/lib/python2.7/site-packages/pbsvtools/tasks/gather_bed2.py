#! python
"""Gather and merge multiple bed files into one file without duplicated headers."""

from __future__ import absolute_import

import logging
import sys
from pbcommand.cli import (pacbio_args_runner,
                           get_default_argparser_with_base_opts)
from pbcommand.utils import setup_log

log = logging.getLogger(__name__)
__version__ = "0.1"


def cat_txt_with_header(i_fns, o_fn):
    """ Concatenate input files i_fns, to output file.
    Only copy header lines from the very first input file, and skip others.
    """
    with open(o_fn, 'w') as writer:
        for i, i_fn in enumerate(i_fns):
            with open(i_fn, 'r') as reader:
                for l in reader:
                    if len(l.strip()) == 0:
                        continue
                    if (i == 0 or not l.startswith('#')):
                        writer.write(l.strip()+"\n")


def run_args(args):
    cat_txt_with_header(i_fns=args.input_files, o_fn=args.output_file)


def _get_parser():
    p = get_default_argparser_with_base_opts(
        version=__version__,
        description=__doc__,
        default_level="INFO")
    p.add_argument("input_files", metavar='in_bed', type=str, nargs='+', help="Input bed file to be gathered")
    p.add_argument("output_file", type=str, help="Output gathered file")
    return p


def main(argv=sys.argv):
    return pacbio_args_runner(
        argv=argv[1:],
        parser=_get_parser(),
        args_runner_func=run_args,
        alog=log,
        setup_log_func=setup_log)


if __name__ == "__main__":
    sys.exit(main(sys.argv))
