#! python

"""Gather multiple vcf."""
from __future__ import absolute_import

import logging
import sys

from pbcommand.models import FileTypes

from pbsvtools.basic import TCP_INPUT, TCP_OUTPUT, BaseGatherConstants, gather_main, gather_run_main
from .gather_bed import cat_txt_with_header

log = logging.getLogger(__name__)


class Constants(BaseGatherConstants):
    """Constants used for gathering scattered `pbsv call` VCF files."""
    TOOL_NAME = "gather_vcf"
    DESCRIPTION = "Gather VCF"
    CHUNK_KEY = "$chunk.vcf_id"
    DEFAULT_OUT_NAME = "structural_variants"

    OUTPUT_FILES = [
        TCP_OUTPUT(FileTypes.VCF, "structural_variants_vcf", "Structural Variants", "Gathered structural variants in VCF", DEFAULT_OUT_NAME)
    ]


def rtc_runner(rtc):
    """
    :type rtc: pbcommand.models.ResolvedToolContract
    :return:
    """
    return gather_run_main(chunk_json=rtc.task.input_files[0],
                           chunk_key=Constants.CHUNK_KEY,
                           gathered_fn=rtc.task.output_files[0],
                           ln_name = Constants.DEFAULT_OUT_NAME,
                           gather_func=cat_txt_with_header)


if __name__ == '__main__':
    sys.exit(gather_main(args=sys.argv[1:], const=Constants, rtc_runner=rtc_runner, alog=log))
