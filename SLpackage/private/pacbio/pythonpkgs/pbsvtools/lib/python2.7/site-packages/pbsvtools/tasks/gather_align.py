#! python

"""Gather `pbsv align` output alignments."""
from __future__ import absolute_import

import logging
import sys

from pbcommand.models import FileTypes
from pbsv1.utils import merge_and_sort_bam
from pbsvtools.basic import TCP_INPUT, TCP_OUTPUT, BaseGatherConstants, gather_main, gather_run_main

log = logging.getLogger(__name__)

class Constants(BaseGatherConstants):
    """Constants used for gathering `pbsv align` bam files.
    output idx 0: a merged and sorted bam file.
    """
    TOOL_NAME = "gather_align"
    DESCRIPTION = "Chunk Gather for pbsv align BAM"
    CHUNK_KEY = "$chunk.bam_id"
    DEFAULT_OUT_NAME = "gathered_sorted"

    OUTPUT_FILES = [
        TCP_OUTPUT(FileTypes.BAM, "bam_out", "BAM", "Gathered sorted BAM", DEFAULT_OUT_NAME)
    ]


def rtc_runner(rtc):
    """
    :type rtc: pbcommand.models.ResolvedToolContract
    :return:
    """
    return gather_run_main(chunk_json=rtc.task.input_files[0],
                           chunk_key=Constants.CHUNK_KEY,
                           gathered_fn=rtc.task.output_files[0],
                           ln_name=Constants.DEFAULT_OUT_NAME,
                           gather_func=merge_and_sort_bam)


if __name__ == '__main__':
    sys.exit(gather_main(args=sys.argv[1:], const=Constants, rtc_runner=rtc_runner, alog=log))
